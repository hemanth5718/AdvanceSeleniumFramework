<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-ILEVVRC8" failures="0" tests="3" name="Test-1" time="0.127" errors="0" timestamp="2025-07-10T16:00:59 IST">
  <testcase classname="BaseClass.BaseClass" name="@BeforeClass configBC" time="-1.752143459411E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;BROWSER&amp;apos; is required by BeforeClass on method configBC but has not been marked @Optional or defined
in C:\Users\heman\eclipse-workspace.java\adv_sel\parallel_distrubutionTest.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'BROWSER' is required by BeforeClass on method configBC but has not been marked @Optional or defined
in C:\Users\heman\eclipse-workspace.java\adv_sel\parallel_distrubutionTest.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
... Removed 12 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass configBC -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeClass configBC" time="-1.752143459411E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;BROWSER&amp;apos; is required by BeforeClass on method configBC but has not been marked @Optional or defined
in C:\Users\heman\eclipse-workspace.java\adv_sel\parallel_distrubutionTest.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'BROWSER' is required by BeforeClass on method configBC but has not been marked @Optional or defined
in C:\Users\heman\eclipse-workspace.java\adv_sel\parallel_distrubutionTest.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
... Removed 12 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass configBC -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod configBM" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod configBM" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod configAM" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod configAM" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod configBM" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod configBM" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod configAM" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod configAM" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod configBM" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod configBM" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod configAM" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod configAM" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="BaseClass.BaseClass" name="@AfterClass configAC" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass configAC -->
  <testcase classname="BaseClass.BaseClass" name="@AfterClass configAC" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass configAC -->
  <testcase classname="CrmOrgTest.CreateOrg" name="CreateOrgWithIndustry" time="0.004">
    <skipped/>
  </testcase> <!-- CreateOrgWithIndustry -->
  <testcase classname="CrmOrgTest.CreateOrg" name="CreateOrgWithPhNo" time="0.0">
    <skipped/>
  </testcase> <!-- CreateOrgWithPhNo -->
  <testcase classname="CrmOrgTest.CreateOrg" name="createOrg" time="0.0">
    <skipped/>
  </testcase> <!-- createOrg -->
</testsuite> <!-- Test-1 -->
